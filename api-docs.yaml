openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: "http://localhost:8080"
  description: Generated server url
paths:
  /api/sign-up:
    post:
      tags:
      - app-user-controller
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserJPA"
        required: true
      responses:
        "200":
          description: OK
  /api/posts/add:
    post:
      tags:
      - post-rest-controller
      operationId: newPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostJDBC"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PostJDBC"
  /api/users:
    get:
      tags:
      - user-rest-controller
      operationId: retrieveAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserJDBC"
  /api/users/user/{username}:
    get:
      tags:
      - user-rest-controller
      operationId: showUsersByUserName
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserJDBC"
  /api/posts:
    get:
      tags:
      - post-rest-controller
      operationId: retrieveAllPosts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PostJDBC"
components:
  schemas:
    RoleJPA:
      type: object
      properties:
        name:
          type: string
    UserJPA:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        enabled:
          type: boolean
        role:
          $ref: "#/components/schemas/RoleJPA"
    PostJDBC:
      type: object
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string
    UserJDBC:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        enabled:
          type: boolean
